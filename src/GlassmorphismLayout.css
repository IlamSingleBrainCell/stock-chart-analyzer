/* src/GlassmorphismLayout.css */

/* Ensure this is imported in App.js or index.js */

/* Base App Container - Flex layout for Sidebar and Main Content */
.app-container {
  display: flex;
  min-height: 100vh;
  position: relative; /* For positioning menu toggle if needed */
  background: var(--body-gradient-start); /* Fallback, actual gradient on body */
}

/* Main Content Area */
.main-content {
  flex: 1;
  padding: 30px;
  overflow-y: auto; /* Allow scrolling for content longer than viewport */
  transition: margin-left 0.3s ease-in-out, filter 0.3s ease-in-out;
  background: var(--main-content-bg, rgba(255, 255, 255, 0.05)); /* Subtle overlay */
  /* Glassmorphism for main content can be added if desired, but often it's the elements *on* it */
}

/* Styles for when the sidebar is active (mainly for mobile push effect) */
.app-container.sidebar-active-app .main-content {
  /* Optional: if you want to blur/dim main content when mobile menu is open */
  /* filter: blur(5px) brightness(0.7); */
}


/* Hamburger Menu Toggle Button for React App */
.menu-toggle-react {
  display: none; /* Hidden by default, shown on mobile */
  position: fixed; /* Or absolute if app-container is main scroll */
  top: 20px;
  left: 20px; /* Place it on the left for LTR languages */
  z-index: 1001; /* Above sidebar if sidebar is also fixed/absolute */

  background: var(--menu-toggle-bg, rgba(255, 255, 255, 0.2));
  color: var(--menu-toggle-color, #fff);
  border: 1px solid var(--menu-toggle-border-color, rgba(255, 255, 255, 0.3));
  backdrop-filter: var(--menu-toggle-blur, blur(5px));
  -webkit-backdrop-filter: var(--menu-toggle-blur, blur(5px));

  padding: 10px 12px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 24px; /* Icon size */
  line-height: 1;
  box-shadow: var(--menu-toggle-shadow, 0 2px 10px rgba(0,0,0,0.2));
  transition: all 0.3s ease;
}

.menu-toggle-react:hover {
  background: var(--menu-toggle-hover-bg, rgba(255, 255, 255, 0.3));
  box-shadow: var(--menu-toggle-hover-shadow, 0 4px 15px rgba(0,0,0,0.3));
}


/* Responsive adjustments */
@media (max-width: 768px) {
  .app-container {
    flex-direction: column; /* Stack sidebar (when it's a top bar) and main content */
  }

  /* Sidebar is handled by its own CSS for fixed positioning and transform */
  /* .sidebar is already set to transform: translateX(-100%) by default in its CSS */
  /* .sidebar.active is transform: translateX(0%) */

  .main-content {
    margin-left: 0; /* No margin when sidebar is an overlay */
    padding-top: 70px; /* Space for a potential fixed top-bar or menu-toggle */
    padding-left: 15px;
    padding-right: 15px;
  }

  .app-container.sidebar-active-app .main-content {
    /* Example: Slightly push content if sidebar is partially visible or has width */
    /* margin-left: 260px; /* Adjust if sidebar has fixed width on mobile when active */
    /* filter: blur(3px) brightness(0.8); /* Optional: Dim content */
  }

  .menu-toggle-react {
    display: block; /* Show hamburger menu */
  }

  /* If sidebar is active, move toggle button to be inside/aligned with it */
  .app-container.sidebar-active-app .menu-toggle-react {
    /* Example: if you want to move it when sidebar is open */
    /* left: 270px; /* Adjust based on sidebar width + desired offset */
  }
}

/* Widget Card Styling (can be moved to a separate component CSS if preferred) */
/* These are generic glassmorphic card styles you can apply */
.widget-card-react {
  padding: 25px;
  border-radius: 15px;
  background: var(--widget-card-bg, rgba(255, 255, 255, 0.15));
  backdrop-filter: var(--widget-card-blur, blur(12px));
  -webkit-backdrop-filter: var(--widget-card-blur, blur(12px));
  border: 1px solid var(--widget-card-border-color, rgba(255, 255, 255, 0.25));
  box-shadow: var(--widget-card-shadow, 0 8px 32px 0 rgba(31, 38, 135, 0.2));
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  color: var(--widget-card-text-color, #fff); /* Default text color for cards */
}

.widget-card-react:hover {
  transform: translateY(-5px);
  box-shadow: var(--widget-card-hover-shadow, 0 12px 40px 0 rgba(31, 38, 135, 0.3));
}

.widget-card-react h3 {
  margin-top: 0;
  margin-bottom: 15px;
  font-weight: 700;
  font-size: 1.5em;
  color: var(--widget-card-header-color, #fff);
}

.widget-card-react p {
  font-size: 0.95em;
  margin-bottom: 20px;
  font-weight: 300;
  line-height: 1.6;
  color: var(--widget-card-paragraph-color, #f0f0f0);
}

/* Button styling (can be global or component-specific) */
.card-button-react {
  padding: 12px 20px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  background: var(--button-gradient, linear-gradient(135deg, #667eea99 0%, #764ba2cc 100%));
  color: var(--button-text-color, #fff);
  transition: background 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
  box-shadow: var(--button-shadow, 0 4px 15px rgba(0, 0, 0, 0.2));
}

.card-button-react:hover {
  background: var(--button-hover-gradient, linear-gradient(135deg, #667eeaaa 0%, #764ba2dd 100%));
  box-shadow: var(--button-hover-glow, 0 0 20px rgba(120, 75, 162, 0.7), 0 0 30px rgba(102, 126, 234, 0.5));
  transform: translateY(-2px);
}

.card-button-react:active {
  transform: translateY(0px);
  box-shadow: var(--button-active-shadow, 0 2px 10px rgba(0, 0, 0, 0.2));
}
